#include "Erelia.h"

struct Stat_data
{
    Stat PA;
    Stat PM;
    Stat HP;
    Trait attack;
    Trait defense;
    Trait attack_spe;
    Trait defense_spe;
    Trait initiative;
};

std::ostream& operator<<(std::ostream& os, const Stat_data value)
{
    os << value.PA.max << ";" << value.PA.upgrade_value << std::endl;
    os << value.PM.max << ";" << value.PM.upgrade_value << std::endl;
    os << value.HP.max << ";" << value.HP.upgrade_value << std::endl;
    os << value.attack.actual << ";" << value.attack.upgrade_value << std::endl;
    os << value.defense.actual << ";" << value.defense.upgrade_value << std::endl;
    os << value.attack_spe.actual << ";" << value.attack_spe.upgrade_value << std::endl;
    os << value.defense_spe.actual << ";" << value.defense_spe.upgrade_value << std::endl;
    os << value.initiative.actual << ";" << value.initiative.upgrade_value << std::endl;
    return (os);
}

void generate_creature_data()
{
    static jgl::Array<jgl::String> name = {
    "Bulbizarre",
    "Herbizarre",
    "Florizarre",
    "Salameche",
    "Reptincel",
    "Dracaufeu",
    "Carapuce",
    "Carabaffe",
    "Tortank",
    "Chenipan",
    "Chrysacier",
    "Papilusion",
    "Aspicot",
    "Coconfort",
    "Dardargnan",
    "Roucool",
    "Roucoups",
    "Roucarnage",
    "Rattata",
    "Rattatac",
    "Piafabec",
    "Rapasdepic",
    "Abo",
    "Arbok",
    "Pikachu",
    "Raichu",
    "Sabelette",
    "Sablaireau",
    "Nidoran F",
    "Nidorina",
    "Nidoqueen",
    "Nidoran M",
    "Nidorino",
    "Nidoking",
    "Melofee",
    "Melodelfe",
    "Goupix",
    "Feunard",
    "Rondoudou",
    "Grodoudou",
    "Nosferapti",
    "Nosferalto",
    "Mystherbe",
    "Ortide",
    "Rafflesia",
    "Paras",
    "Parasect",
    "Mimitoss",
    "Aeromite",
    "Taupiqueur",
    "Triopikeur",
    "Miaouss",
    "Persian",
    "Psykokwak",
    "Akwakwak",
    "Ferosinge",
    "Colossinge",
    "Caninos",
    "Arcanin",
    "Ptitard",
    "Têtarte",
    "Tartard",
    "Abra",
    "Kadabra",
    "Alakazam",
    "Machoc",
    "Machopeur",
    "Mackogneur",
    "Chetiflor",
    "Boustiflor",
    "Empiflor",
    "Tentacool",
    "Tentacruel",
    "Racaillou",
    "Gravalanch",
    "Grolem",
    "Ponyta",
    "Galopa",
    "Ramoloss",
    "Flagadoss",
    "Magneti",
    "Magneton",
    "Canarticho",
    "Doduo",
    "Dodrio",
    "Otaria",
    "Lamantine",
    "Tadmorv",
    "Grotadmorv",
    "Kokiyas",
    "Crustabri",
    "Fantominus",
    "Spectrum",
    "Ectoplasma",
    "Onix",
    "Soporifik",
    "Hypnomade",
    "Krabby",
    "Krabboss",
    "Voltorbe",
    "Electrode",
    "Nœunœuf",
    "Noadkoko",
    "Osselait",
    "Ossatueur",
    "Kicklee",
    "Tygnon",
    "Excelangue",
    "Smogo",
    "Smogogo",
    "Rhinocorne",
    "Rhinoferos",
    "Leveinard",
    "Saquedeneu",
    "Kangourex",
    "Hypotrempe",
    "Hypocean",
    "Poissirene",
    "Poissoroy",
    "Stari",
    "Staross",
    "M. Mime",
    "Insecateur",
    "Lippoutou",
    "Elektek",
    "Magmar",
    "Scarabrute",
    "Tauros",
    "Magicarpe",
    "Leviator",
    "Lokhlass",
    "Metamorph",
    "Evoli",
    "Aquali",
    "Voltali",
    "Pyroli",
    "Porygon",
    "Amonita",
    "Amonistar",
    "Kabuto",
    "Kabutops",
    "Ptera",
    "Ronflex",
    "Artikodin",
    "Electhor",
    "Sulfura",
    "Minidraco",
    "Draco",
    "Dracolosse",
    "Mewtwo",
    "Mew",
    };
    static jgl::Array<int> index = {
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,//10
        3,
        3,
        3,
        3,
        3,
        1,
        1,
        1,
        3,
        3,//20
        1,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,//30
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        2,
        2,//40
        1,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        1,
        3,//50
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,//60
        4,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,//70
        3,
        4,
        4,
        3,
        3,
        3,
        3,
        3,
        3,
        3,//80
        3,
        3,
        1,
        1,
        1,
        4,
        4,
        3,
        3,
        4,//90
        4,
        3,
        3,
        3,
        3,
        3,
        3,
        4,
        4,
        3,//100
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,//110
        3,
        3,
        2,
        3,
        3,
        4,
        4,
        4,
        4,
        4,//120
        4,
        2,
        3,
        2,
        3,
        3,
        3,
        3,
        4,
        4,//130
        4,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,//140
        3,
        1,
        3,
        1,
        1,
        1,
        3,
        3,
        3,
        3,//150
        2
    };
    static jgl::Array<jgl::Vector2> sprite = {
        jgl::Vector2(0, 36),//oiseau
        jgl::Vector2(0, 37),//melofee
        jgl::Vector2(0, 38),//kangourex
        jgl::Vector2(0, 39),//poison
    };

    static jgl::Array< Stat_data> stat_array = {
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 10
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 20
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 30
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 40
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 50
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 60
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 70
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 80
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 90
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 100
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},
        {Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f)},// 110
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },// 120
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },// 130
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },// 140
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },// 150
        { Stat(6.0f, 0.05f), Stat(3, 0.07f), Stat(20, 2.0f), Trait(10, 1.35f), Trait(8, 1.35f), Trait(10, 1.25f), Trait(8, 1.25f), Trait(10, 1.2f) },
    };


    for (size_t i = 0; i < name.size(); i++)
    {
        jgl::String file_name = jgl::normalize_string(jgl::itoa(i), '0', 3) + "-" + name[i];
        std::fstream file = jgl::open_file("ressources/creature/" + file_name + ".crea", std::ios_base::out | std::ios_base::trunc);
        file << i + 1 << std::endl;
        file << name[i] << std::endl;
        file << i % 16 << ";" << i / 16 << std::endl;
        file << jgl::itoa(sprite[index[i] - 1].x) << ";" << jgl::itoa(sprite[index[i] - 1].y) << std::endl;
        Stat_data tmp = stat_array[i];
        file << tmp << std::endl;
    }
}
